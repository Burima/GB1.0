@model GBAdmin.Web.Models.DriverViewModel
@using GBAdmin.Web.Services
@{
    ViewBag.Title = "Edit";
    var OrganizationID = SessionManager.GetSessionUser().OrganizationID;
    var role = SessionManager.GetSessionRole().ToUpper();
}
<link rel="stylesheet" href="//code.jquery.com/ui/1.12.0/themes/base/jquery-ui.css">
<style>
    .attached-with {
        font-size: 15px;
        padding-bottom: 7%;
    }

        .attached-with label {
            font-weight: normal;
        }

        .attached-with input[type=checkbox] {
            height: 15px;
            width: 15px;
            margin-left: 2%;
        }

    #Message {
        margin-top: 2%;
        background: #1ab394;
        color: white;
        padding: 1%;
        margin-bottom: 2%;
        display: none;
        height: 36px;
        /*height: 76px;*/
    }

        #Message .msg-close {
            cursor: pointer;
        }
</style>
@*<div class="modal inmodal fade in hidden" id="modalShowMessage" tabindex="-1" role="dialog" aria-hidden="false" style="display: block;">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Message</h4>
                </div>
                <div class="modal-body">
                    <p id="editDriverMessage">

                    </p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary center-block modalClose" data-dismiss="modal">Done</button>
                </div>
            </div>
        </div>
    </div>*@
@using (Ajax.BeginForm("Edit", "Drivers", new { ReturnUrl = ViewBag.ReturnUrl }, new AjaxOptions() { OnSuccess = "editDriverSuccess", OnFailure = "editDriverFailed", HttpMethod = "Post" }, new { @class = "form-horizontal", role = "form", id = "form-EditDriver", autocomplete = "off" }))
{
    <div class="form-group">
        <div id="Message">
            <span class="pull-left msg-text"></span>
            <span class="pull-right msg-close">X</span>
        </div>
    </div>
    <div class="row  border-bottom white-bg dashboard-header">
        <!-- Edit details -->
        <div class="col-sm-8">
            <div class="ibox-content">
                <div class="panel-body">
                    <div class="panel-group" id="accordion">
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <h5 class="panel-title">
                                    <a id="linkCollapsePersonalDetails" data-toggle="collapse" data-parent="#accordion" href="#collapsePersonalDetails">Personal Details</a>
                                </h5>
                            </div>
                            <div id="collapsePersonalDetails" class="panel-collapse collapse in">

                                <div class="panel-body">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.FirstName, new { @class = "col-md-2 control-label" })
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control charAlone", maxlength = "50", placeholder = "First Name", tabIndex = "1" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.LastName, new { @class = "col-md-2 control-label" })
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(model => model.LastName, new { @class = "form-control charAlone", maxlength = "50", placeholder = "Last Name", tabIndex = "2" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.PhoneNumber, new { @class = "col-md-2 control-label" })

                                        <div class="col-md-10">
                                            @if (role == Constants.Roles.SuperAdmin.ToString().ToUpper()
                                                || role == Constants.Roles.Admin.ToString().ToUpper()
                                                || role == Constants.Roles.Manager.ToString().ToUpper())
                                            {

                                                @Html.TextBoxFor(model => model.PhoneNumber, new { @class = "form-control numbersAlone", maxlength = "10", placeholder = "Phone Number", tabIndex = "3" })
                                            }
                                            else
                                            {
                                                @Html.HiddenFor(m => m.PhoneNumber)
                                                @Html.TextBoxFor(model => model.PhoneNumber, new { @class = "form-control numbersAlone", maxlength = "10", disabled = "disabled", placeholder = "Phone Number", tabIndex = "3" })
                                            }

                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.Pincode, new { @class = "col-md-2 control-label" })
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(model => model.Pincode, new { @class = "form-control numbersAlone", maxlength = "6", placeholder = "Pincode", tabIndex = "4" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="pull-right" style="padding-right:5%">
                                            <button id="btnNextPersonalDetails" class="btn btn-primary" type="button" tabindex="5">Next</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <h4 class="panel-title">
                                    <a id="linkCollapseProfessionalDetails" data-toggle="collapse" data-parent="#accordion" href="#">Professional Details</a>
                                </h4>
                            </div>
                            <div id="collapseProfessionalDetails" class="panel-collapse collapse">
                                <div class="panel-body">
                                    <div class="form-group">
                                        @Html.HiddenFor(m => m.CityID)
                                        @Html.Label("License Type", new { @class = "col-md-2 control-label" })
                                        <div class="col-md-10">
                                            @Html.DropDownListFor(m => m.LicenceType, new List<SelectListItem>
                                                 { new SelectListItem { Text = "LMV", Value = "1"},
                                                   new SelectListItem { Text = "LMV-NT", Value = "2"},
                                                   new SelectListItem { Text = "LMV-TR", Value = "3"},
                                                    new SelectListItem { Text = "HMV", Value = "4"},
                                                    new SelectListItem { Text = "HPMV", Value = "5"},
                                                    new SelectListItem { Text = "HGMV", Value = "6"},
                                                    new SelectListItem { Text = "LMV-CAB", Value = "7"},
                                                    new SelectListItem { Text = "Others", Value = "8"},
                                              }, "License Type", new { @class = "form-control", tabIndex = "1" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.LicenceNo, new { @class = "col-md-2 control-label" })
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(model => model.LicenceNo, new { @class = "form-control", maxlength = "50", placeholder = "License Number", tabIndex = "2" })
                                        </div>

                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.ExpectedSalary, new { @class = "col-md-2 control-label" })
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(model => model.ExpectedSalary, new { @class = "col-md-6 form-control numbersAlone", maxlength = "5", placeholder = "Expected Salary in INR", tabIndex = "4" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.Status, new { @class = "col-md-2 control-label" })

                                        <div class="col-md-10">
                                            @if (role == Constants.Roles.Marketing.ToString().ToUpper())
                                            {
                                                @Html.HiddenFor(m => m.Status)
                                                @Html.DropDownListFor(m => m.Status, new List<SelectListItem>
                                                 {  new SelectListItem { Text = "New", Value = "1"},
                                                    new SelectListItem { Text = "Approved", Value = "2"},
                                                    new SelectListItem { Text = "Rejected", Value = "3"},
                                                    new SelectListItem { Text = "Have License", Value = "4"},
                                                    new SelectListItem { Text = "Applied For Licence", Value = "5"},
                                                    new SelectListItem { Text = "Learner Received", Value = "6"},
                                                    new SelectListItem { Text = "Licence Received", Value = "7"},
                                                    new SelectListItem { Text = "Attached", Value = "8"},
                                                    new SelectListItem { Text = "Partner Matched", Value = "9"},
                                                    new SelectListItem { Text = "Completed First Trip", Value = "10"},
                                                    new SelectListItem { Text = "Dormant", Value = "11"},
                                                   }, "Select Status", new { @class = "form-control ddlDriverStatus", disabled = "disabled", tabIndex = "5" })
                                            }
                                            else
                                            {
                                                @Html.DropDownListFor(m => m.Status, new List<SelectListItem>
                                                 {  new SelectListItem { Text = "New", Value = "1"},
                                                    new SelectListItem { Text = "Approved", Value = "2"},
                                                    new SelectListItem { Text = "Rejected", Value = "3"},
                                                    new SelectListItem { Text = "Have License", Value = "4"},
                                                    new SelectListItem { Text = "Applied For Licence", Value = "5"},
                                                    new SelectListItem { Text = "Learner Received", Value = "6"},
                                                    new SelectListItem { Text = "Licence Received", Value = "7"},
                                                    new SelectListItem { Text = "Attached", Value = "8"},
                                                    new SelectListItem { Text = "Partner Matched", Value = "9"},
                                                    new SelectListItem { Text = "Completed First Trip", Value = "10"},
                                                    new SelectListItem { Text = "Dormant", Value = "11"},

                                                   }, "Select Status", new { @class = "form-control ddlDriverStatus", tabIndex = "5" })
                                            }
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.Label("Registered In", new { @class = "col-md-2 control-label" })
                                        <div class="attached-with">
                                            <div class="col-md-10">
                                                <div class="col-md-4">
                                                    <label>Uber</label>@Html.CheckBoxFor(model => model.Uber, new { @class = "form-control", tabIndex = "6" })
                                                </div>
                                                <div class="col-md-4">
                                                    <label>Ola</label>@Html.CheckBoxFor(model => model.Ola, new { @class = "form-control", tabIndex = "7" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    @*<div class="form-group">
                                            <div class="pull-right" style="padding-right:5%">
                                                <button id="btnSaveAllInformation" class="btn btn-primary" type="submit" tabindex="8">Done</button>
                                            </div>
                                        </div>*@
                                    <div class="form-group">
                                        <div class="pull-right" style="padding-right:5%">
                                            <button id="btnNextProfessionalDetails" class="btn btn-primary" type="button" tabindex="5">Next</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <h5 class="panel-title">
                                    <a id="linkCollapseFollowupDetails" data-toggle="collapse" data-parent="#accordion" href="#collapseFollowupDetails">FollowUp Details</a>
                                </h5>
                            </div>
                            <div id="collapseFollowupDetails" class="panel-collapse collapse">
                                <div class="panel-body">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.FollowUpOn, new { @class = "col-md-2 control-label " })
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(model => model.FollowUpOn, new { @class = "form-control dtFollowUp datefield", tabIndex = "1", id = "followUpOn", placeholder = "Follow Up On" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.FollowUpNotes, new { @class = "col-md-2 control-label" })
                                        <div class="col-md-10">
                                            @Html.TextAreaFor(model => model.FollowUpNotes, new { @class = "form-control", placeholder = "FollowUp Notes", tabIndex = "2", id = "followUpNotes" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.NextFollowUp, new { @class = "col-md-2 control-label " })

                                        <div class="col-md-10">
                                            @Html.TextBoxFor(model => model.NextFollowUp, new { @class = "form-control dtFollowUp datefield", tabIndex = "3", id = "nextFollowUp", placeholder = "Next Follow Up" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="pull-right" style="padding-right:5%">
                                            <button id="btnSaveAllInformation" class="btn btn-primary" type="submit" tabindex="8">Done</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div><!-- End Edit details -->
        <!-- Followup details-->
        <div class="col-sm-4">
            <div class="ibox float-e-margins table-bordered" >
                <div class="ibox-title">
                    <h5>Followup History</h5>
                    @if (Model.DriverDetailsActivityLogs != null && Model.DriverDetailsActivityLogs.Count > 0)
                    {
                        <div class="ibox-tools">
                            <span class="label label-warning-light">@Model.DriverDetailsActivityLogs.Count Followups</span>
                    </div>
                    }
                    else
                    {
                        <div class="ibox-tools">
                            <span class="label label-warning-light">0 Followups</span>
                    </div>
                    }
                </div>
                <div class="ibox-content">

                    <div>
                        <div class="feed-activity-list">

                            @if (Model.DriverDetailsActivityLogs != null && Model.DriverDetailsActivityLogs.Count > 0)
                            {
                                foreach (var log in Model.DriverDetailsActivityLogs)
                                {
                                    var user=log.User;
                                    <div class="feed-element">
                                        <a href="#" class="pull-left">
                                            <img alt="image" class="img-circle" src='@Url.Content(user.ProfilePicture != null && user.ProfilePicture != String.Empty ? user.ProfilePicture : "~/Images/default_profile_pic.jpg")'>
                                        </a>
                                        <div class="media-body ">
                                            @*<small class="pull-right">2h ago</small>*@
                                            <strong>@user.FirstName</strong> followed on <strong>@String.Format("{0:dd/MM/yyyy}", log.FollowUpOn)</strong><br>
                                            @*<small class="text-muted">Yesterday 5:20 pm - 12.06.2014</small>*@
                                            <div class="well">
                                                <strong>Notes: </strong>@log.FollowUpNotes<br /><br />
                                                @if (log.NextFollowUp != null)
                                                {
                                                    <text><strong>Next Followup: </strong>@String.Format("{0:dd/MM/yyyy}", log.NextFollowUp)</text>
                                                }
                                                else
                                                {
                                                    <text> <strong>Next Followup: </strong> NA</text>
                                                }


                                            </div>
                                            @*<div class="pull-right">
                                                    <a class="btn btn-xs btn-white"><i class="fa fa-thumbs-up"></i> like </a>
                                                </div>*@
                                        </div>
                                    </div>
                                }

                            }
                            else
                            {
                                <text>No followup made yet.</text>
                            }
                            @*<div class="feed-element">
                                    <a href="@Url.Action("Profile", "AppViews")" class="pull-left">
                                        <img alt="image" class="img-circle" src="~/Images/a5.jpg">
                                    </a>
                                    <div class="media-body ">
                                        <small class="pull-right">2h ago</small>
                                        <strong>Kim Smith</strong> posted message on <strong>Monica Smith</strong> site. <br>
                                        <small class="text-muted">Yesterday 5:20 pm - 12.06.2014</small>
                                        <div class="well">
                                            Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s.
                                            Over the years, sometimes by accident, sometimes on purpose (injected humour and the like).
                                        </div>
                                        <div class="pull-right">
                                            <a class="btn btn-xs btn-white"><i class="fa fa-thumbs-up"></i> like </a>
                                        </div>
                                    </div>
                                </div>*@

                        </div>

                        @*<button class="btn btn-primary btn-block m-t"><i class="fa fa-arrow-down"></i> Show More</button>*@

                    </div>

                </div>
            </div>
        </div> <!-- End Followup details-->
    </div>

}

@section Scripts{

    <script>
        var DriversListUrl = '@Url.Action("List","Drivers")';
        $(document).ready(function () {
            $(".numbersAlone").on("keyup keydown keypress", function (event) { return isNumberKey(event); });
            $(".charAlone").on(" keydown ", function (event) { return isCharField(event); });
            $(".ddlDriverStatus").find("option:first").attr('disabled', true);
            $("#followUpOn").datepicker({ dateFormat: "dd/mm/yy" });
            $("#nextFollowUp").datepicker({ dateFormat: "dd/mm/yy" });
        });

        $('#btnNextPersonalDetails').click(function () {
            if ($('#form-EditDriver').valid()) {
                //hide BasicInformation upon valid data
                $('#collapsePersonalDetails').removeClass('in');
                //google api function

                //initialization of the map based on area and city
                // initialize();
                $('#linkCollapseProfessionalDetails').attr('href', '#collapseProfessionalDetails'); //activate collapseable functionality through linking it with the target id
                $('#collapseProfessionalDetails').addClass('in');//open Locality panel
            }
        });

        $('#linkCollapsePersonalDetails').click(function () {
            $('#linkCollapseProfessionalDetails').removeAttr('href', '#collapseProfessionalDetails');
            $('#collapseProfessionalDetails').removeClass('in');
        });

        $('#btnNextProfessionalDetails').click(function () {
            if ($('#form-EditDriver').valid()) {
                //hide BasicInformation upon valid data
                $('#collapseProfessionalDetails').removeClass('in');
                //google api function

                //initialization of the map based on area and city
                // initialize();
                $('#linkCollapseFollowupDetails').attr('href', '#collapseFollowupDetails'); //activate collapseable functionality through linking it with the target id
                $('#collapseFollowupDetails').addClass('in');//open Locality panel
            }
        });

        $('#linkCollapseProfessionalDetails').click(function () {
            $('#linkCollapseFollowupDetails').removeAttr('href', '#collapseFollowupDetails');
            $('#collapseFollowupDetails').removeClass('in');
        });

        var editDriverSuccess = function (data) {
            if (data.Success) {
                $('#form-EditDriver #Message .msg-text').html(data.Message).parent('#Message').css('background-color', '#1ab394').show('slow').delay(5000).hide('slow', function () {
                    window.location.href = DriversListUrl;
                });
            } else {
                $('#form-EditDriver #Message .msg-text').html(data.Message).parent('#Message').css('background-color', '#a94442').show('slow').delay(5000).hide('slow', function () {
                    //$(this).prop('disabled', false);
                });
            }
        };

        var editDriverFailed = function (data) {
            $('#form-EditDriver #Message .msg-text').html(data.Message).parent('#Message').css('background-color', '#a94442').show('slow').delay(5000).hide('slow', function () {
                //$(this).prop('disabled', false);
            });
        };
    </script>
}



