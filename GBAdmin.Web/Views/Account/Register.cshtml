@model GBAdmin.Web.Models.RegisterViewModel
@using GBAdmin.Web.Services
@{
    ViewBag.Title = "Register";
    var showMessage = TempData["Message"] != null ? true : false;
}

<div class="row  border-bottom white-bg dashboard-header">
    <div class="col-sm-9">
        <div class="row">
            <div class="col-sm-8">
                <h3 class="m-t-none m-b">Add new driver</h3>
                @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                {
                    @Html.AntiForgeryToken()                   
                    @*@Html.ValidationSummary()*@
                    <div class="form-group">
                        @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control charAlone", maxlength = "50", placeholder = "First Name", tabIndex = "1" })
                    </div>
                    <div class="form-group">
                        @Html.TextBoxFor(m => m.LastName, new { @class = "form-control charAlone", maxlength = "50", placeholder = "Last Name", tabIndex = "2" })
                    </div>
                    <div class="form-group">
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "Email", tabIndex = "3" })
                    </div>
                    <div class="form-group">
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control", id = "Password", placeholder = "Password", tabIndex = "4" })
                    </div>
                    <div class="form-group">
                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", placeholder = "Confirm Password", tabIndex = "5" })
                    </div>
                    <div class="form-group">
                        @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control numbersAlone", maxlength = "10", placeholder = "Phone Number", tabIndex = "6" })
                    </div>
                    <div class="form-group">
                        @if (Session["Role"].ToString().ToUpper() == Constants.Roles.SuperAdmin.ToString().ToUpper())
                        {
                            @Html.DropDownListFor(m => m.RoleName, new List<SelectListItem>
                    { new SelectListItem { Text = "Admin", Value = "Admin"},
                    new SelectListItem { Text = "Manager", Value = "Manager"},
                    new SelectListItem { Text = "Employee", Value = "Employee"},
                    new SelectListItem { Text = "Marketing", Value = "Marketing"},
                    new SelectListItem { Text = "Telecaller", Value = "Telecaller"},
                    new SelectListItem { Text = "Sales", Value = "Sales"},
               }, "Select Role", new { @class = "form-control", placeholder = "Role", tabIndex = "7" })
                        }
                        else if (Session["Role"].ToString().ToUpper() == Constants.Roles.Admin.ToString().ToUpper())
                        {
                            @Html.DropDownListFor(m => m.RoleName, new List<SelectListItem>{
                    new SelectListItem { Text = "Manager", Value = "Manager"},
                    new SelectListItem { Text = "Employee", Value = "Employee"},
                    new SelectListItem { Text = "Marketing", Value = "Marketing"},
                    new SelectListItem { Text = "Telecaller", Value = "Telecaller"},
                    new SelectListItem { Text = "Sales", Value = "Sales"},
               }, "Select Role", new { @class = "form-control", placeholder = "Role", tabIndex = "7" })
                        }
                        else if (Session["Role"].ToString().ToUpper() == Constants.Roles.Manager.ToString().ToUpper())
                        {
                            @Html.DropDownListFor(m => m.RoleName, new List<SelectListItem>{
                    new SelectListItem { Text = "Employee", Value = "Employee"},
                    new SelectListItem { Text = "Marketing", Value = "Marketing"},
                    new SelectListItem { Text = "Telecaller", Value = "Telecaller"},
                    new SelectListItem { Text = "Sales", Value = "Sales"},
               }, "Select Role", new { @class = "form-control", placeholder = "Role", tabIndex = "7" })
                        }
                    </div>

                    <div class="form-group">                       
                            <input type="submit" class="btn btn-primary full-width" value="Register" tabindex="8" />                       
                    </div>
                }
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            $(".numbersAlone").on("keyup keydown keypress", function (event) { return isNumberKey(event); });
            $(".charAlone").on(" keydown ", function (event) { return isCharField(event); });
            $('#modalShowMessage').modal('show');
            $("#Password").attr('data-toggle', 'popover').attr('data-placement', 'bottom').attr('title', 'Your Password must have:').attr('data-content', '<span style="text-align:left;">Minimum 8 characters<br/>At least one capital letter,<br/>A number<br/>And a special character !@@#$%^&</span> ').popover({ trigger: 'hover', html: true });
        });
    </script>
}
