@model GBAdmin.Web.Models.RegisterViewModel
@using GBAdmin.Web.Services
@{
    ViewBag.Title = "Register";
    var showMessage = TempData["Message"] != null ? true : false;
}

<div class="row  border-bottom white-bg dashboard-header">
    <div class="col-sm-9">
        <div class="row">
            <div class="col-sm-8">
                <h3 class="m-t-none m-b">Add a local account</h3>
                @using (Ajax.BeginForm("Register", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, new AjaxOptions() { OnSuccess = "addUserSuccess", OnFailure = "addUserFailed", HttpMethod = "Post" }, new { role = "form", id = "form-addUser", autocomplete = "off" }))
                {
                    <div class="form-group">
                        <div id="Message"><span class="pull-left msg-text"></span><span class="pull-right msg-close">X</span></div>
                    </div>
                    @Html.AntiForgeryToken()
                    @*@Html.ValidationSummary()*@
                    <div class="form-group">
                        @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control charAlone", maxlength = "50", placeholder = "First Name", tabIndex = "1" })
                    </div>
                    <div class="form-group">
                        @Html.TextBoxFor(m => m.LastName, new { @class = "form-control charAlone", maxlength = "50", placeholder = "Last Name", tabIndex = "2" })
                    </div>
                    <div class="form-group">
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "Email", tabIndex = "3" })
                    </div>
                    <div class="form-group">
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control", id = "Password", placeholder = "Password", tabIndex = "4" })
                    </div>
                    <div class="form-group">
                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", placeholder = "Confirm Password", tabIndex = "5" })
                        @Html.ValidationMessageFor(m => m.ConfirmPassword)
                    </div>
                    <div class="form-group">
                        @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control numbersAlone", maxlength = "10", placeholder = "Phone Number", tabIndex = "6" })
                    </div>
                    <div class="form-group">
                        @if (role == Constants.Roles.SuperAdmin.ToString().ToUpper())
                        {
                            @Html.DropDownListFor(m => m.RoleName, new List<SelectListItem>
                                { new SelectListItem { Text = "Admin", Value = "Admin"},
                                new SelectListItem { Text = "Manager", Value = "Manager"},
                                new SelectListItem { Text = "Employee", Value = "Employee"},
                                new SelectListItem { Text = "Telecaller", Value = "Telecaller"},
                                new SelectListItem { Text = "Marketing", Value = "Marketing"},
                           }, "Select Role", new { @class = "form-control", placeholder = "Role", tabIndex = "7" })
                        }
                        else if (role == Constants.Roles.Admin.ToString().ToUpper())
                        {
                            @Html.DropDownListFor(m => m.RoleName, new List<SelectListItem>{
                    new SelectListItem { Text = "Manager", Value = "Manager"},
                    new SelectListItem { Text = "Employee", Value = "Employee"},
                    new SelectListItem { Text = "Telecaller", Value = "Telecaller"},
                    new SelectListItem { Text = "Marketing", Value = "Marketing"},
               }, "Select Role", new { @class = "form-control", placeholder = "Role", tabIndex = "7" })
                        }
                        else if (role == Constants.Roles.Manager.ToString().ToUpper())
                        {
                            @Html.DropDownListFor(m => m.RoleName, new List<SelectListItem>{
                    new SelectListItem { Text = "Employee", Value = "Employee"},
                    new SelectListItem { Text = "Telecaller", Value = "Telecaller"},
                    new SelectListItem { Text = "Marketing", Value = "Marketing"},
               }, "Select Role", new { @class = "form-control", placeholder = "Role", tabIndex = "7" })
                        }
                    </div>
                    <div class="form-group">
                        @Html.DropDownListFor(m => m.CityID, new List<SelectListItem>{
                        new SelectListItem { Text = "Kolkata", Value = "1"},
                        new SelectListItem { Text = "Mumbai", Value = "2"},
                        }, "Select City", new { @class = "form-control", placeholder = "City", tabIndex = "8" })
                    </div>
                    <div class="form-group">
                        <input type="submit" class="btn btn-primary full-width" value="Register" tabindex="8" id="submit" />
                    </div>
                }
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @*@Scripts.Render("~/bundles/jqueryval")*@
    <script>
        var UsersListUrl = '@Url.Action("List","Users")';
        //document ready
        $(document).ready(function () {
            $(".numbersAlone").on("keyup keydown keypress", function (event) { return isNumberKey(event); });
            $(".charAlone").on(" keydown ", function (event) { return isCharField(event); });
            $('#modalShowMessage').modal('show');
            $("#Password").attr('data-toggle', 'popover').attr('data-placement', 'bottom').attr('title', 'Your Password must have:').attr('data-content', '<span style="text-align:left;">Minimum 8 characters<br/>At least one capital letter,<br/>A number<br/>And a special character !@@#$%^&</span> ').popover({ trigger: 'focusin hover', html: true });
        });
        //add user success
        var addUserSuccess = function (data) {
            if (data.Success) {
                $('#form-addUser #Message .msg-text').html(data.Message).parent('#Message').css('background-color', '#1ab394').show('slow').delay(5000).hide('slow', function () {
                    window.location.href = UsersListUrl;
                });

            } else {
                $('#form-addUser #Message .msg-text').html(data.errors[0]).parent('#Message').css('background-color', '#a94442').show('slow').delay(5000).hide('slow', function () {
                    location.reload();
                });
            }
        }
        //add user failed
        var addUserFailed = function (data) {
            $('#form-addUser #Message .msg-text').html(data.errors[0]).parent('#Message').css('background-color', '#a94442').show('slow').delay(5000).hide('slow', function () {
                location.reload();
            });
        }
    </script>
}
